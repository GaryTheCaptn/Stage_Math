import math

import numpy as np
from matplotlib import pyplot as plt
from numpy import random

from random import randint

from Anniversaire import retire, quicksort, maxanniv, correction2, correction3


def lancer() -> bool: return (random.randint(0, 2) == 1)


def parties(n: int) -> int:
    res = 0
    for i in range(n):
        if lancer():
            res += 1
    return res

#On fait n parties à k lancers, leur moyenne empirique et on ajoute ça à stats
def moy_emp(n: int, k :int):
    moy_emp = 0
    for i in range(1, n + 1):
        moy_emp+=parties(k)
    return moy_emp/n

def stats(echantillon : int, n: int, k: int):
    res=[]
    for i in range(echantillon):
        res.append(moy_emp(n,k))
    return res

def frequencesTh(n: int):
    res=[]
    for i in range(n+1):
        calc=math.comb(n,i)*(0.5**i)*(0.5**(n-i))
        res.append(calc)
    return res


def espVar(n : int):
    e=0
    e2=0
    valeurs=[]
    probas=[]
    for i in range(n+1):
        valeurs.append(i)
        probas.append(math.comb(n,i)*(0.5**i)*(0.5**(n-i)))
        e+=valeurs[i]*probas[i]
        e2+=(valeurs[i]**2)*probas[i]
    V=e2-e
    return e,math.sqrt(V)

def affiche(echantillon,n,k):
    dat=correction3(correction2(stats(echantillon, n,k)))
    x=[]
    y=[]
    for i in range(len(dat)):
        x.append(dat[i][0])
        y.append(dat[i][1])
    """y2=frequencesTh(k)"""
    # plot
    fig, ax = plt.subplots()
    ax.stem(x, y)
    """ plt.bar(x,y2, 0.4, label = 'Répartition théorique')"""
    plt.xlabel("Nombre de piles")
    plt.ylabel("Nombre d'occurrences ")
    plt.legend()
    plt.title(f"Nombre de piles pour {n} parties à {k} lancers, sur un échantillon de {echantillon}.")
    plt.show()

def GAY(l : list[(int,int)]):
    res=l[0][1]
    for i in range(len(l)):
        if l[i][1]>res:
            res=l[i][1]
    return res
def affiche2(echantillon,n,k):
    dat=correction3(correction2(stats(echantillon, n,k)))
    dat2=espVar(k)
    E : float =dat2[0]
    sigma : float = dat2[1]
    max=GAY(dat)
    x=[]
    y=[]
    for i in range(len(dat)):
        temp : float = dat[i][0]
        x.append((temp-E)*(math.sqrt(n) / sigma))
        y.append(dat[i][1]/max)
    """y2=frequencesTh(k)"""
    # plot
    fig, ax = plt.subplots()
    ax.stem(x, y)
    """ plt.bar(x,y2, 0.4, label = 'Répartition théorique')"""
    plt.xlabel("Nombre de piles")
    plt.ylabel("Nombre d'occurrences ")
    plt.legend()
    plt.title(f"Nombre de piles pour {n} parties à {k} lancers, sur un échantillon de {echantillon}.")
    plt.show()

affiche(500,10,100)

